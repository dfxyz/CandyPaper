// if the color has alpha value, the name string is appended with '$'

export const colorCustomizations: Record<string, string> = {
  'editor.foreground': 'fg.默认',
  'editor.background': 'bg.默认',
  'editorLineNumber.foreground': 'fg.次要文本',
  'editorLineNumber.activeForeground': 'fg.默认',
  'editorCursor.foreground': 'fg.默认',
  'editorCursor.background': 'bg.默认',
  'editor.selectionBackground': 'bg.选中文本',
  'editor.wordHighlightBackground': 'bg.光标下标识符_读$',
  'editor.wordHighlightStrongBackground': 'bg.光标下标识符_写$',
  'editor.findMatchBackground': 'bg.文本搜索结果',
  'editor.findMatchForeground': 'fg.文本搜索结果',
  'editor.findMatchHighlightBackground': 'bg.文本搜索结果$',
  'editor.findMatchHighlightForeground': 'fg.文本搜索结果$',
  'editor.lineHighlightBackground': 'bg.当前行',
  'editorWhitespace.foreground': 'fg.次要文本',
  'editorIndentGuide.activeBackground1': 'line.光标下缩进对齐线',
  'editorIndentGuide.background1': 'line.缩进对齐线',
  'editorRuler.foreground': 'line.行宽对齐线',
  'editorBracketMatch.background': 'bg.成对括号',
  'editor.foldBackground': 'bg.折叠文本$',
  'terminal.foreground': 'fg.默认',
  'terminal.background': 'bg.默认',
  'terminal.ansiBlack': 'fg.黑',
  'terminal.ansiBrightBlack': 'fg.黑',
  'terminal.ansiWhite': 'fg.白',
  'terminal.ansiBrightWhite': 'fg.白',
  'terminal.ansiRed': 'fg.红',
  'terminal.ansiBrightRed': 'fg.红',
  'terminal.ansiYellow': 'fg.黄',
  'terminal.ansiBrightYellow': 'fg.黄',
  'terminal.ansiGreen': 'fg.绿',
  'terminal.ansiBrightGreen': 'fg.绿',
  'terminal.ansiCyan': 'fg.青',
  'terminal.ansiBrightCyan': 'fg.青',
  'terminal.ansiBlue': 'fg.蓝',
  'terminal.ansiBrightBlue': 'fg.蓝',
  'terminal.ansiMagenta': 'fg.桃红',
  'terminal.ansiBrightMagenta': 'fg.桃红',
  'terminalCursor.foreground': 'fg.默认',
  'terminalCursor.background': 'bg.默认',
};

export const tokenColorScopes: Record<string, string[]> = {
  'fg.黑': [
    "punctuation.definition.tag",
    "meta.template.expression",
    "meta.structure.dictionary.key.python",
    "source.css variable",
    "keyword.operator",
    "keyword.other.unit",
    "punctuation.section.embedded.begin.php",
    "punctuation.section.embedded.end.php",
    "support.function.git-rebase",
    "variable.language.wildcard.java",
    "entity.name.function",
    "support.function",
    "support.constant.handlebars",
    "keyword.other.operator",
    "entity.name.operator.custom-literal",
    "entity.name.operator",
    "variable",
    "meta.definition.variable.name",
    "support.variable",
    "entity.name.variable",
    "constant.other.placeholder",
    "punctuation.definition.group.regexp",
    "punctuation.definition.group.assertion.regexp",
    "punctuation.definition.character-class.regexp",
    "punctuation.character.set.begin.regexp",
    "punctuation.character.set.end.regexp",
    "keyword.operator.negation.regexp",
    "support.other.parenthesis.regexp",
  ],
  'fg.深红': [
    "variable.other.constant",
  ],
  'fg.红': [
    "invalid",
  ],
  'fg.橙红': [
    "constant.numeric",
    "keyword.operator.plus.exponent",
    "keyword.operator.minus.exponent",
    "meta.preprocessor.numeric",
    "support.constant.property-value",
    "support.constant.font-name",
    "support.constant.media-type",
    "support.constant.media",
    "constant.other.color.rgb-value",
    "constant.other.rgb-value",
    "support.constant.color",
    "constant.sha.git-rebase",
    "constant.character.character-class.regexp",
    "constant.other.character-class.set.regexp",
    "constant.other.character-class.regexp",
    "constant.character.set.regexp",
    "keyword.operator.quantifier.regexp",
  ],
  'fg.黄': [
    "meta.preprocessor",
    "entity.name.function.preprocessor",
  ],
  'fg.橄榄绿': [
    "comment",
  ],
  'fg.绿': [
    "constant.language",
    "entity.name.tag",
    "entity.name.selector",
    "entity.other.attribute-name.class.css",
    "source.css entity.other.attribute-name.class",
    "entity.other.attribute-name.id.css",
    "entity.other.attribute-name.parent-selector.css",
    "entity.other.attribute-name.parent.less",
    "source.css entity.other.attribute-name.pseudo-class",
    "entity.other.attribute-name.pseudo-element.css",
    "source.css.less entity.other.attribute-name.id",
    "entity.other.attribute-name.scss",
    "markup.heading",
    "storage",
    "storage.type",
    "storage.modifier",
    "keyword",
    "keyword.control",
    "keyword.operator.new",
    "keyword.operator.expression",
    "keyword.operator.cast",
    "keyword.operator.sizeof",
    "keyword.operator.alignof",
    "keyword.operator.typeid",
    "keyword.operator.alignas",
    "keyword.operator.instanceof",
    "keyword.operator.logical.python",
    "keyword.operator.wordlike",
    "storage.modifier.import.java",
    "storage.modifier.package.java",
    "this.self",
    "keyword.other.using",
    "keyword.other.directive.using",
    "keyword.operator.or.regexp",
    "keyword.control.anchor.regexp",
  ],
  'fg.青': [
    "string",
    "constant.regexp",
    "punctuation.definition.quote.begin.markdown",
    "punctuation.definition.list.begin.markdown",
    "markup.inline.raw",
    "meta.preprocessor.string",
    "meta.embedded.assembly",
    "string.comment.buffered.block.pug",
    "string.quoted.pug",
    "string.interpolated.pug",
    "string.unquoted.plain.in.yaml",
    "string.unquoted.plain.out.yaml",
    "string.unquoted.block.yaml",
    "string.quoted.single.yaml",
    "string.quoted.double.xml",
    "string.quoted.single.xml",
    "string.unquoted.cdata.xml",
    "string.quoted.double.html",
    "string.quoted.single.html",
    "string.unquoted.html",
    "string.quoted.single.handlebars",
    "string.quoted.double.handlebars",
    "string.regexp",
    "constant.character",
    "constant.other.option",
  ],
  'fg.蓝': [
    "keyword.operator.noexcept",
    "punctuation.definition.template-expression.begin",
    "punctuation.definition.template-expression.end",
    "punctuation.section.embedded",
    "support.class",
    "support.type",
    "entity.name.type",
    "entity.name.namespace",
    "entity.other.attribute",
    "entity.name.scope-resolution",
    "entity.name.class",
    "storage.type.numeric.go",
    "storage.type.byte.go",
    "storage.type.boolean.go",
    "storage.type.string.go",
    "storage.type.uintptr.go",
    "storage.type.error.go",
    "storage.type.rune.go",
    "storage.type.cs",
    "storage.type.generic.cs",
    "storage.type.modifier.cs",
    "storage.type.variable.cs",
    "storage.type.annotation.java",
    "storage.type.generic.java",
    "storage.type.java",
    "storage.type.object.array.java",
    "storage.type.primitive.array.java",
    "storage.type.primitive.java",
    "storage.type.token.java",
    "storage.type.groovy",
    "storage.type.annotation.groovy",
    "storage.type.parameters.groovy",
    "storage.type.generic.groovy",
    "storage.type.object.array.groovy",
    "storage.type.primitive.array.groovy",
    "storage.type.primitive.groovy",
    "meta.type.cast.expr",
    "meta.type.new.expr",
    "support.constant.math",
    "support.constant.dom",
    "support.constant.json",
    "entity.other.inherited-class",
    "punctuation.separator.namespace.ruby",
    "constant.character.escape",
    "entity.name.label",
  ],
  'fg.紫': [
    "entity.other.attribute-name",
    "support.type.vendored.property-name",
    "support.type.property-name",
    "source.coffee.embedded",
    "support.type.property-name.json",
    "variable.other.constant.property",
    "variable.other.property",
    "meta.object-literal.key",
  ],
  'fg.桃红': [
    "variable.other.enummember",
  ],
};

export const tokenScopeSettings: Record<string, { foreground: string; fontStyle: string }> = {
  'markup.underline': {
    'foreground': 'fg.默认',
    'fontStyle': 'underline',
  },
  'markup.bold': {
    'foreground': 'fg.默认',
    'fontStyle': 'bold',
  },
  'markup.italic': {
    'foreground': 'fg.默认',
    'fontStyle': 'italic',
  },
};

export const semanticTokenColorCustomizations: Record<string, string> = {
  'newOperator': 'fg.关键字',
  'stringLiteral': 'fg.字符串',
  'customLiteral': 'fg.默认',
  'numberLiteral': 'fg.数字',
};
